{"version":3,"sources":["images/Rick_and_Morty_-_logo.png","components/Header.js","components/Filters.js","components/CharacterCard.js","components/NotACharacter.js","components/CharacterList.js","images/alien.png","images/person.png","images/dead.png","images/alive.png","images/portal.png","images/rick.png","images/rick-and-morty-portal.png","components/NotFoundPage.js","components/CharacterDetail.js","components/Footer.js","services/api.js","components/App.js","index.js"],"names":["Header","className","src","logo","alt","Filters","props","onSubmit","ev","preventDefault","placeholder","value","search","onChange","handleChangeSearch","name","id","valueSpecies","handleChangeSpecie","valueStatus","handleChangeStatus","defaultProps","inputType","CharacterCard","characterData","image","species","NotACharacter","CharacterList","data","length","htmlList","map","i","to","NotFoundPage","portal","title","CharacterDetail","undefined","status","unknown","width","height","dead","alive","person","alien","origin","episode","Footer","callToApi","fetch","then","response","json","results","character","App","useState","setData","setSearch","setSpecies","setStatus","sort","a","b","localeCompare","useEffect","routeData","useRouteMatch","characterId","params","selectedCharacter","find","parseInt","filteredData","filter","toLocaleLowerCase","includes","path","exact","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"wUAAe,MAA0B,kD,eCiB1BA,EAdA,WACb,OACE,iCACE,qBAAKC,UAAU,oBAAf,SACE,qBACEC,IAAKC,EACLC,IAAI,sBACJH,UAAU,gCCPdI,G,MAAU,SAACC,GAIf,OACE,uBAAML,UAAU,kBAAkBM,SAJf,SAACC,GACpBA,EAAGC,kBAGH,UACE,uBAAOR,UAAU,yBAAjB,+CAGA,uBACEA,UAAU,yBACVS,YAAY,QACZC,MAAOL,EAAMM,OACbC,SAAUP,EAAMQ,qBAElB,uBAAOb,UAAU,yBAAjB,qBACA,yBACEA,UAAU,0BACVc,KAAK,UACLC,GAAG,UACHL,MAAOL,EAAMW,aACbJ,SAAUP,EAAMY,mBALlB,UAOE,wBAAQP,MAAM,MAAd,mBACA,wBAAQA,MAAM,QAAd,oBACA,wBAAQA,MAAM,QAAd,wBAEF,uBAAOV,UAAU,yBAAjB,oBACA,yBACEA,UAAU,0BACVc,KAAK,SACLC,GAAG,SACHL,MAAOL,EAAMa,YACbN,SAAUP,EAAMc,mBALlB,UAOE,wBAAQT,MAAM,MAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,qBACA,wBAAQA,MAAM,UAAd,iCAMRN,EAAQgB,aAAe,CACrBC,UAAW,QAOEjB,QCzCAkB,EAdO,SAACjB,GACrB,OACE,qCACE,qBACEL,UAAU,uBACVC,IAAKI,EAAMkB,cAAcC,MACzBrB,IAAG,iBAAYE,EAAMkB,cAAcT,QAErC,oBAAId,UAAU,wBAAd,SAAuCK,EAAMkB,cAAcT,OAC3D,oBAAId,UAAU,0BAAd,SAAyCK,EAAMkB,cAAcE,cCDpDC,EARO,WACpB,OACE,mBAAG1B,UAAU,eAAb,iECkBW2B,EAfO,SAACtB,GACrB,GAA0B,IAAtBA,EAAMuB,KAAKC,OACb,OAAO,cAAC,EAAD,IAEP,IAAMC,EAAWzB,EAAMuB,KAAKG,KAAI,SAACR,EAAeS,GAAhB,OAC9B,oBAAIhC,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMiC,GAAE,qBAAgBV,EAAcR,IAAMf,UAAU,OAAtD,SACE,cAAC,EAAD,CAAeuB,cAAeA,OAFGA,EAAcR,OAMrD,OAAO,oBAAIf,UAAU,YAAd,SAA2B8B,KChBvB,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,G,YAAA,IAA0B,mDCuB1BI,EAlBM,WACnB,OACE,sBAAKlC,UAAU,OAAf,UACE,cAAC,IAAD,CAAMiC,GAAG,IAAIjC,UAAU,OAAvB,SACE,qBACEC,IAAKkC,EACLhC,IAAI,4BACJH,UAAU,cACVoC,MAAM,qBAGV,oBAAGpC,UAAU,gBAAb,mCACwB,uBADxB,+BCuDSqC,EA1DS,SAAChC,GAWvB,YAAmBiC,IAAfjC,EAAMuB,KAEN,qCACE,cAAC,IAAD,CAAMK,GAAG,IAAIjC,UAAU,OAAvB,SACE,qBACEC,IAAKkC,EACLhC,IAAI,kBACJiC,MAAM,kBACNpC,UAAU,iBAGd,oBAAIA,UAAU,mBAAd,SACE,qBAAIA,UAAU,kBAAd,UACE,qBACEC,IAAKI,EAAMuB,KAAKJ,MAChBrB,IAAG,iBAAYE,EAAMuB,KAAKd,MAC1Bd,UAAU,yBAEZ,gCACE,qBAAIA,UAAU,8BAAd,mBACSK,EAAMuB,KAAKd,QAEpB,oBAAGd,UAAU,0BAAb,oBA/BgB,YAAtBK,EAAMuB,KAAKW,OACN,qBAAKtC,IAAKuC,EAASC,MAAM,MAAMC,OAAO,KAAKvC,IAAI,iBACvB,SAAtBE,EAAMuB,KAAKW,OACb,qBAAKtC,IAAK0C,EAAMF,MAAM,KAAKC,OAAO,KAAKvC,IAAI,cAE3C,qBAAKF,IAAK2C,EAAOH,MAAM,KAAKC,OAAO,KAAKvC,IAAI,iBA2B3C,oBAAGH,UAAU,2BAAb,qBACW,IACe,UAAvBK,EAAMuB,KAAKH,QACV,qBAAKxB,IAAK4C,EAAQJ,MAAM,KAAKC,OAAO,KAAKvC,IAAI,gBAE7C,qBAAKF,IAAK6C,EAAOL,MAAM,KAAKC,OAAO,KAAKvC,IAAI,kBAGhD,oBAAGH,UAAU,0BAAb,qBACWK,EAAMuB,KAAKmB,UAEtB,oBAAG/C,UAAU,4BAAb,uBACaK,EAAMuB,KAAKoB,sBAQ3B,cAAC,EAAD,KCzDIC,G,MARA,WACb,OACE,iCACE,uBAAOjD,UAAU,SAAjB,gDCeSkD,EApBG,WAEhB,OAAOC,MAAM,8CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAEL,OAAOA,EAASE,QAAQxB,KAAI,SAACyB,GAC3B,MAAO,CACLzC,GAAIyC,EAAUzC,GACdD,KAAM0C,EAAU1C,KAChByB,OAAQiB,EAAUjB,OAClBd,QAAS+B,EAAU/B,QACnBD,MAAOgC,EAAUhC,MACjBuB,OAAQS,EAAUT,OAAOjC,KACzBkC,QAASQ,EAAUR,QAAQnB,eCqFtB4B,G,YAnFH,WAEV,MAAwBC,mBAAS,IAAjC,mBAAO9B,EAAP,KAAa+B,EAAb,KAEA,EAA4BD,mBAAS,IAArC,mBAAO/C,EAAP,KAAeiD,EAAf,KAEA,EAA8BF,mBAAS,OAAvC,mBAAOjC,EAAP,KAAgBoC,EAAhB,KAEA,EAA4BH,mBAAS,OAArC,mBAAOnB,EAAP,KAAeuB,EAAf,KAGoBlC,EAAKmC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAElD,KAAKoD,cAAcD,EAAEnD,SAG/DqD,qBAAU,WACRjB,IAAYE,MAAK,SAACC,GAChBM,EAAQN,QAET,IAEH,IAAMe,EAAYC,YAAc,kBAE1BC,EAA4B,OAAdF,EAAqBA,EAAUG,OAAOxD,GAAK,GAEzDyD,EAAoB5C,EAAK6C,MAC7B,SAACjB,GAAD,OAAeA,EAAUzC,KAAO2D,SAASJ,MAIrCK,EAAe/C,EAClBgD,QAAO,SAACpB,GACP,OAAOA,EAAU1C,KACd+D,oBACAC,SAASnE,EAAOkE,wBAEpBD,QAAO,SAACpB,GAAD,MAA2B,QAAZ/B,GAAqBA,IAAY+B,EAAU/B,WACjEmD,QAAO,SAACpB,GAAD,MAA0B,QAAXjB,GAAoBA,IAAWiB,EAAUjB,UAkBlE,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwC,KAAK,iBAAZ,SACE,cAAC,EAAD,CAAiBnD,KAAM4C,MAEzB,eAAC,IAAD,CAAOQ,OAAK,EAACD,KAAK,IAAlB,UACE,cAAC,EAAD,CACEpE,OAAQA,EACRE,mBAzBiB,SAACN,GAC1BA,EAAGC,iBACHoD,EAAUrD,EAAG0E,cAAcvE,QAwBnBM,aAAcS,EACdR,mBArBiB,SAACV,GAC1BsD,EAAWtD,EAAG0E,cAAcvE,QAqBpBQ,YAAaqB,EACbpB,mBAlBiB,SAACZ,GAC1BuD,EAAUvD,EAAG0E,cAAcvE,UAmBrB,yBAASV,UAAU,qBAAnB,SACE,cAAC,EAAD,CAAe4B,KAAM+C,SAGzB,cAAC,IAAD,UACE,cAAC,EAAD,SAGJ,cAAC,EAAD,SCzFNO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5072c6aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo.de13d484.png\";","import logo from '../images/Rick_and_Morty_-_logo.png';\r\nimport '../styles/layout/header.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className='container__header'>\r\n        <img\r\n          src={logo}\r\n          alt='Logo Rick and Morty'\r\n          className='container__header--img'\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import '../styles/layout/filter.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filters = (props) => {\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <form className='container__form' onSubmit={handleSubmit}>\r\n      <label className='container__form--label'>\r\n        Busca por el nombre del personaje\r\n      </label>\r\n      <input\r\n        className='container__form--input'\r\n        placeholder='Morty'\r\n        value={props.search}\r\n        onChange={props.handleChangeSearch}\r\n      />\r\n      <label className='container__form--label'>Especie</label>\r\n      <select\r\n        className='container__form--select'\r\n        name='species'\r\n        id='species'\r\n        value={props.valueSpecies}\r\n        onChange={props.handleChangeSpecie}\r\n      >\r\n        <option value='all'>Todos</option>\r\n        <option value='Alien'>Aliens</option>\r\n        <option value='Human'>Humanos</option>\r\n      </select>\r\n      <label className='container__form--label'>Estado</label>\r\n      <select\r\n        className='container__form--select'\r\n        name='status'\r\n        id='status'\r\n        value={props.valueStatus}\r\n        onChange={props.handleChangeStatus}\r\n      >\r\n        <option value='all'>Todos</option>\r\n        <option value='Alive'>Vivos</option>\r\n        <option value='Dead'>Muertos</option>\r\n        <option value='unknown'>Desconocido</option>\r\n      </select>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilters.defaultProps = {\r\n  inputType: 'text',\r\n};\r\n\r\nFilters.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filters;\r\n","const CharacterCard = (props) => {\r\n  return (\r\n    <>\r\n      <img\r\n        className='container__info--img'\r\n        src={props.characterData.image}\r\n        alt={`Img of ${props.characterData.name}`}\r\n      />\r\n      <h3 className='container__info--name'>{props.characterData.name}</h3>\r\n      <h4 className='container__info--specie'>{props.characterData.species}</h4>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","const NotACharacter = () => {\r\n  return (\r\n    <p className='no-page--par'>\r\n      El personaje que buscas no existe en esta galaxia.\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default NotACharacter;\r\n","import { Link } from 'react-router-dom';\r\n//Componentes\r\nimport CharacterCard from './CharacterCard';\r\nimport NotACharacter from './NotACharacter';\r\n\r\nconst CharacterList = (props) => {\r\n  if (props.data.length === 0) {\r\n    return <NotACharacter />;\r\n  } else {\r\n    const htmlList = props.data.map((characterData, i) => (\r\n      <li className='container__info' key={characterData.id}>\r\n        <Link to={`/character/${characterData.id}`} className='link'>\r\n          <CharacterCard characterData={characterData} />\r\n        </Link>\r\n      </li>\r\n    ));\r\n    return <ul className='container'>{htmlList}</ul>;\r\n  }\r\n};\r\n\r\nexport default CharacterList;\r\n","export default __webpack_public_path__ + \"static/media/alien.ee2f8d48.png\";","export default __webpack_public_path__ + \"static/media/person.cb3354c4.png\";","export default __webpack_public_path__ + \"static/media/dead.34360336.png\";","export default __webpack_public_path__ + \"static/media/alive.9a953373.png\";","export default __webpack_public_path__ + \"static/media/portal.f7a707b1.png\";","export default __webpack_public_path__ + \"static/media/rick.80dc1a7d.png\";","export default __webpack_public_path__ + \"static/media/rick-and-morty-portal.a218ca22.png\";","import { Link } from 'react-router-dom';\r\n//Estilos\r\nimport '../styles/layout/notFoundPage.scss';\r\n//ImÃ¡genes\r\nimport portal from '../images/rick-and-morty-portal.png';\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div className='page'>\r\n      <Link to='/' className='link'>\r\n        <img\r\n          src={portal}\r\n          alt='Portal de vuelta a inicio'\r\n          className='portal-img2'\r\n          title='Volver a incio'\r\n        />\r\n      </Link>\r\n      <p className='no-page--par2'>\r\n        Wubba Lubba Dub Dub!! <br /> Vuelve por el portal\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import { Link } from 'react-router-dom';\r\n//ImÃ¡genes\r\nimport alien from '../images/alien.png';\r\nimport person from '../images/person.png';\r\nimport dead from '../images/dead.png';\r\nimport alive from '../images/alive.png';\r\nimport portal from '../images/portal.png';\r\nimport unknown from '../images/rick.png';\r\n//Estilos\r\nimport '../styles/layout/characterDetail.scss';\r\n//Componentes\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\nconst CharacterDetail = (props) => {\r\n  const status = () => {\r\n    if (props.data.status === 'unknown') {\r\n      return <img src={unknown} width='120' height='70' alt='Unknown icon' />;\r\n    } else if (props.data.status === 'Dead') {\r\n      return <img src={dead} width='70' height='70' alt='Dead icon' />;\r\n    } else {\r\n      return <img src={alive} width='70' height='70' alt='Dead icon' />;\r\n    }\r\n  };\r\n\r\n  if (props.data !== undefined) {\r\n    return (\r\n      <>\r\n        <Link to='/' className='link'>\r\n          <img\r\n            src={portal}\r\n            alt='Volver atrÃ¡s'\r\n            title='Volver atrÃ¡s'\r\n            className='portal-img'\r\n          />\r\n        </Link>\r\n        <ul className='container-detail'>\r\n          <li className='containerDetail'>\r\n            <img\r\n              src={props.data.image}\r\n              alt={`Img of ${props.data.name}`}\r\n              className='containerDetail--img'\r\n            />\r\n            <div>\r\n              <h3 className='containerDetail--nameDetail'>\r\n                Name: {props.data.name}\r\n              </h3>\r\n              <p className='containerDetail--status'>Status:{status()}</p>\r\n              <p className='containerDetail--species'>\r\n                Species:{' '}\r\n                {props.data.species === 'Human' ? (\r\n                  <img src={person} width='70' height='70' alt='Person icon' />\r\n                ) : (\r\n                  <img src={alien} width='70' height='70' alt='Alien icon' />\r\n                )}\r\n              </p>\r\n              <p className='containerDetail--origin'>\r\n                Origin: {props.data.origin}\r\n              </p>\r\n              <p className='containerDetail--episodes'>\r\n                Episodes: {props.data.episode}\r\n              </p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  } else {\r\n    return <NotFoundPage />;\r\n  }\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import '../styles/layout/footer.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <small className='footer'> &copy; MarÃ­a Daniela Darnea </small>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const callToApi = () => {\r\n  // Llamamos al API\r\n  return fetch(' https://rickandmortyapi.com/api/character')\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      // Cuando responde el API podemos limpiar los datos aquÃ­\r\n      return response.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          status: character.status,\r\n          species: character.species,\r\n          image: character.image,\r\n          origin: character.origin.name,\r\n          episode: character.episode.length,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default callToApi;\r\n","//import Proptypes from 'prop-types';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n//Componentes\nimport Header from './Header';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport NotFoundPage from './NotFoundPage';\nimport Footer from './Footer';\n//Servicios\nimport callToApi from '../services/api';\n//Estilos\nimport '../styles/App.scss';\nimport '../styles/layout/list.scss';\n\nconst App = () => {\n  //Variable estado para el array con los datos que devuelve el api.\n  const [data, setData] = useState([]);\n  //Variable de estado para guardar el value del input.\n  const [search, setSearch] = useState('');\n  //Variable para escoger la especie\n  const [species, setSpecies] = useState('all');\n  //Variable para escoger por estado\n  const [status, setStatus] = useState('all');\n\n  //Ordenar alfabÃ©ticamente\n  const orderedData = data.sort((a, b) => a.name.localeCompare(b.name));\n\n  //Llamar al api con useEffect\n  useEffect(() => {\n    callToApi().then((response) => {\n      setData(response);\n    });\n  }, []);\n\n  const routeData = useRouteMatch('/character/:id');\n\n  const characterId = routeData !== null ? routeData.params.id : '';\n\n  const selectedCharacter = data.find(\n    (character) => character.id === parseInt(characterId)\n  );\n\n  //con el filter filtamos por nombre para se pueda buscar por el nombre de cada personaje; y en el select que se pueda seleccionar por especie/estado. Con el map pintamos cada personaje en el HTML.\n  const filteredData = data\n    .filter((character) => {\n      return character.name\n        .toLocaleLowerCase()\n        .includes(search.toLocaleLowerCase());\n    })\n    .filter((character) => species === 'all' || species === character.species)\n    .filter((character) => status === 'all' || status === character.status);\n\n  //FunciÃ³n que sincronica el value del input donde la usuaria teclea su bÃºsqueda y la variable de estado search.\n  const handleChangeSearch = (ev) => {\n    ev.preventDefault();\n    setSearch(ev.currentTarget.value);\n  };\n\n  //FunciÃ³n para filtrar por especies\n  const handleChangeSpecie = (ev) => {\n    setSpecies(ev.currentTarget.value);\n  };\n\n  //FunciÃ³n para filtrar por estado\n  const handleChangeStatus = (ev) => {\n    setStatus(ev.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path='/character/:id'>\n          <CharacterDetail data={selectedCharacter} />\n        </Route>\n        <Route exact path='/'>\n          <Filters\n            search={search}\n            handleChangeSearch={handleChangeSearch}\n            valueSpecies={species}\n            handleChangeSpecie={handleChangeSpecie}\n            valueStatus={status}\n            handleChangeStatus={handleChangeStatus}\n          />\n          <section className='section__container'>\n            <CharacterList data={filteredData} />\n          </section>\n        </Route>\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}