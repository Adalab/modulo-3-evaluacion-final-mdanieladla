{"version":3,"sources":["images/Rick_and_Morty_-_logo.png","components/Header.js","components/Filters.js","components/CharacterCard.js","components/NotACharacter.js","components/CharacterList.js","images/alien.png","images/person.png","images/dead.png","images/alive.png","images/portal.png","images/rick.png","images/rick-and-morty-portal.png","components/NotFoundPage.js","components/CharacterDetail.js","components/Footer.js","services/api.js","components/App.js","index.js"],"names":["Header","className","src","logo","alt","FilterCharacterByName","props","placeholder","value","search","onChange","handleChangeSearch","name","id","species","handleChangeSpecie","status","handleChangeStatus","defaultProps","inputType","CharacterCard","characterData","image","NotACharacter","CharacterList","data","length","htmlList","map","i","to","NotFouondPage","portal","title","CharacterDetail","undefined","unknown","width","height","dead","alive","person","alien","origin","episode","NotFoundPage","Footer","callToApi","fetch","then","response","json","results","character","App","useState","setData","setSearch","setSpecies","setStatus","orderedData","sort","a","b","localeCompare","console","log","useEffect","routeData","useRouteMatch","characterId","params","selectedCharacter","find","parseInt","filteredData","filter","toLocaleLowerCase","includes","path","exact","ev","preventDefault","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f911389f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo.de13d484.png\";","import logo from '../images/Rick_and_Morty_-_logo.png';\r\nimport '../styles/layout/header.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className='container__header'>\r\n        <img\r\n          src={logo}\r\n          alt='Logo Rick and Morty'\r\n          className='container__header--img'\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import '../styles/layout/filter.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterCharacterByName = (props) => {\r\n  return (\r\n    <form className='container__form'>\r\n      <label className='container__form--label'>\r\n        Busca por el nombre del personaje\r\n      </label>\r\n      <input\r\n        className='container__form--input'\r\n        placeholder='Morty'\r\n        value={props.search}\r\n        onChange={props.handleChangeSearch}\r\n      />\r\n      <label className='container__form--label'>Especie</label>\r\n      <select\r\n        className='container__form--select'\r\n        name='species'\r\n        id='species'\r\n        value={props.species}\r\n        onChange={props.handleChangeSpecie}\r\n      >\r\n        <option value='all'>Todos</option>\r\n        <option value='Alien'>Aliens</option>\r\n        <option value='Human'>Humanos</option>\r\n      </select>\r\n      <label className='container__form--label'>Estado</label>\r\n      <select\r\n        className='container__form--select'\r\n        name='status'\r\n        id='status'\r\n        value={props.status}\r\n        onChange={props.handleChangeStatus}\r\n      >\r\n        <option value='all'>Todos</option>\r\n        <option value='Alive'>Vivos</option>\r\n        <option value='Dead'>Muertos</option>\r\n        <option value='unknown'>Desconocido</option>\r\n      </select>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilterCharacterByName.defaultProps = {\r\n  inputType: 'text',\r\n};\r\n\r\nFilterCharacterByName.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FilterCharacterByName;\r\n","const CharacterCard = (props) => {\r\n  return (\r\n    <>\r\n      <img\r\n        className='container__info--img'\r\n        src={props.characterData.image}\r\n        alt={`Img of ${props.characterData.name}`}\r\n      />\r\n      <h3 className='container__info--name'>{props.characterData.name}</h3>\r\n      <h4 className='container__info--specie'>{props.characterData.species}</h4>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","const NotACharacter = () => {\r\n  return (\r\n    <p className='no-page--par'>\r\n      El personaje que buscas no existe en esta galaxia.\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default NotACharacter;\r\n","import { Link } from 'react-router-dom';\r\n//Componentes\r\nimport CharacterCard from './CharacterCard';\r\nimport NotACharacter from './NotACharacter';\r\n\r\nconst CharacterList = (props) => {\r\n  if (props.data.length === 0) {\r\n    return <NotACharacter />;\r\n  } else {\r\n    const htmlList = props.data.map((characterData, i) => (\r\n      <li className='container__info' key={characterData.id}>\r\n        <Link to={`/character/${characterData.id}`} className='link'>\r\n          <CharacterCard characterData={characterData} />\r\n        </Link>\r\n      </li>\r\n    ));\r\n    return <ul className='container'>{htmlList}</ul>;\r\n  }\r\n};\r\n\r\nexport default CharacterList;\r\n","export default __webpack_public_path__ + \"static/media/alien.ee2f8d48.png\";","export default __webpack_public_path__ + \"static/media/person.cb3354c4.png\";","export default __webpack_public_path__ + \"static/media/dead.34360336.png\";","export default __webpack_public_path__ + \"static/media/alive.9a953373.png\";","export default __webpack_public_path__ + \"static/media/portal.f7a707b1.png\";","export default __webpack_public_path__ + \"static/media/rick.80dc1a7d.png\";","export default __webpack_public_path__ + \"static/media/rick-and-morty-portal.a218ca22.png\";","import { Link } from 'react-router-dom';\r\n//Estilos\r\nimport '../styles/layout/notFoundPage.scss';\r\n//ImÃ¡genes\r\nimport portal from '../images/rick-and-morty-portal.png';\r\nconst NotFouondPage = () => {\r\n  return (\r\n    <div className='page'>\r\n      <Link to='/' className='link'>\r\n        <img\r\n          src={portal}\r\n          alt='Portal de vuelta a inicio'\r\n          className='portal-img2'\r\n          title='Volver a incio'\r\n        />\r\n      </Link>\r\n      <p className='no-page--par2'>\r\n        Wubba Lubba Dub Dub!! <br /> Vuelve por el portal\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFouondPage;\r\n","import { Link } from 'react-router-dom';\r\n//ImÃ¡genes\r\nimport alien from '../images/alien.png';\r\nimport person from '../images/person.png';\r\nimport dead from '../images/dead.png';\r\nimport alive from '../images/alive.png';\r\nimport portal from '../images/portal.png';\r\nimport unknown from '../images/rick.png';\r\n//Estilos\r\nimport '../styles/layout/characterDetail.scss';\r\n//Componentes\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\nconst CharacterDetail = (props) => {\r\n  const status = () => {\r\n    if (props.data.status === 'unknown') {\r\n      return <img src={unknown} width='120' height='70' alt='Unknown icon' />;\r\n    } else if (props.data.status === 'Dead') {\r\n      return <img src={dead} width='70' height='70' alt='Dead icon' />;\r\n    } else {\r\n      return <img src={alive} width='70' height='70' alt='Dead icon' />;\r\n    }\r\n  };\r\n\r\n  if (props.data !== undefined) {\r\n    return (\r\n      <>\r\n        <Link to='/' className='link'>\r\n          <img\r\n            src={portal}\r\n            alt='Volver atrÃ¡s'\r\n            title='Volver atrÃ¡s'\r\n            className='portal-img'\r\n          />\r\n        </Link>\r\n        <ul className='container-detail'>\r\n          <li className='containerDetail'>\r\n            <img\r\n              src={props.data.image}\r\n              alt={`Img of ${props.data.name}`}\r\n              className='containerDetail--img'\r\n            />\r\n            <div>\r\n              <h3 className='containerDetail--nameDetail'>\r\n                Name: {props.data.name}\r\n              </h3>\r\n              <p className='containerDetail--status'>Status:{status()}</p>\r\n              <p className='containerDetail--species'>\r\n                Species:{' '}\r\n                {props.data.species === 'Human' ? (\r\n                  <img src={person} width='70' height='70' alt='Person icon' />\r\n                ) : (\r\n                  <img src={alien} width='70' height='70' alt='Alien icon' />\r\n                )}\r\n              </p>\r\n              <p className='containerDetail--origin'>\r\n                Origin: {props.data.origin}\r\n              </p>\r\n              <p className='containerDetail--episodes'>\r\n                Episodes: {props.data.episode}\r\n              </p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  } else {\r\n    return <NotFoundPage />;\r\n  }\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import '../styles/layout/footer.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <small className='footer'> &copy; MarÃ­a Daniela Darnea </small>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const callToApi = () => {\r\n  // Llamamos al API\r\n  return fetch(' https://rickandmortyapi.com/api/character')\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      // Cuando responde el API podemos limpiar los datos aquÃ­\r\n      return response.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          status: character.status,\r\n          species: character.species,\r\n          image: character.image,\r\n          origin: character.origin.name,\r\n          episode: character.episode.length,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default callToApi;\r\n","//import Proptypes from 'prop-types';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n//Componentes\nimport Header from './Header';\nimport FilterCharacterByName from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport NotFoundPage from './NotFoundPage';\nimport Footer from './Footer';\n//Servicios\nimport callToApi from '../services/api';\n//Estilos\nimport '../styles/App.scss';\nimport '../styles/layout/list.scss';\n\nconst App = () => {\n  //Variable estado para el array con los datos que devuelve el api.\n  const [data, setData] = useState([]);\n  //Variable de estado para guardar el value del input.\n  const [search, setSearch] = useState('');\n  //Variable para escoger la especie\n  const [species, setSpecies] = useState('all');\n  //Variable para escoger por estado\n  const [status, setStatus] = useState('all');\n\n  //Ordenar alfabÃ©ticamente\n  const orderedData = data.sort((a, b) => a.name.localeCompare(b.name));\n  console.log('sort=', orderedData);\n\n  //Llamar al api con useEffect\n  useEffect(() => {\n    callToApi().then((response) => {\n      setData(response);\n    });\n  }, []);\n\n  const routeData = useRouteMatch('/character/:id');\n\n  const characterId = routeData !== null ? routeData.params.id : '';\n\n  const selectedCharacter = data.find(\n    (character) => character.id === parseInt(characterId)\n  );\n\n  //con el filter filtamos por nombre para se pueda buscar por el nombre de cada personaje; y en el select que se pueda seleccionar por especie/estado. Con el map pintamos cada personaje en el HTML.\n  const filteredData = data\n    .filter((character) => {\n      return character.name\n        .toLocaleLowerCase()\n        .includes(search.toLocaleLowerCase());\n    })\n    .filter((character) => species === 'all' || species === character.species)\n    .filter((character) => status === 'all' || status === character.status);\n\n  //FunciÃ³n que sincronica el value del input donde la usuaria teclea su bÃºsqueda y la variable de estado search.\n  const handleChangeSearch = (ev) => {\n    ev.preventDefault();\n    setSearch(ev.currentTarget.value);\n  };\n\n  //FunciÃ³n para filtrar por especies\n  const handleChangeSpecie = (ev) => {\n    setSpecies(ev.currentTarget.value);\n  };\n\n  //FunciÃ³n para filtrar por estado\n  const handleChangeStatus = (ev) => {\n    setStatus(ev.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path='/character/:id'>\n          <CharacterDetail data={selectedCharacter} />\n        </Route>\n        <Route exact path='/'>\n          <FilterCharacterByName\n            search={search}\n            handleChangeSearch={handleChangeSearch}\n            handleChangeSpecie={handleChangeSpecie}\n            handleChangeStatus={handleChangeStatus}\n          />\n          <section className='section__container'>\n            <CharacterList data={filteredData} />\n          </section>\n        </Route>\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}